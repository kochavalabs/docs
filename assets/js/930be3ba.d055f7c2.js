"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[122],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(r),h=a,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4863:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={},c="Mazzaroth-XDR",s={unversionedId:"Developer_Tools/Mazzaroth_XDR",id:"Developer_Tools/Mazzaroth_XDR",title:"Mazzaroth-XDR",description:"CircleCI",source:"@site/../docs/4-Developer_Tools/5-Mazzaroth_XDR.md",sourceDirName:"4-Developer_Tools",slug:"/Developer_Tools/Mazzaroth_XDR",permalink:"/docs/docs/Developer_Tools/Mazzaroth_XDR",editUrl:"https://github.com/kochavalabs/docs/tree/main/../docs/4-Developer_Tools/5-Mazzaroth_XDR.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"mazzaroth-rs",permalink:"/docs/docs/Developer_Tools/Mazzaroth_RS"},next:{title:"XDR Codegen",permalink:"/docs/docs/Developer_Tools/XDR_Codegen"}},p={},u=[{value:"Generating Code",id:"generating-code",level:2},{value:"License",id:"license",level:2}],d={toc:u};function h(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mazzaroth-xdr"},"Mazzaroth-XDR"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://circleci.com/gh/kochavalabs/mazzaroth-xdr"},(0,o.kt)("img",{parentName:"a",src:"https://circleci.com/gh/kochavalabs/mazzaroth-xdr.svg?style=svg",alt:"CircleCI"}))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/kochavalabs/mazzaroth-xdr"},"Self Link"))),(0,o.kt)("p",null,"Mazzaroth-xdr is a library that defines the core XDR data structures used by\nMazzaroth. This includes the definitions of the blockchain, its underlying\ndata structures and the objects stored in the StateDB."),(0,o.kt)("p",null,"All objects are defined in the idl directory as ",(0,o.kt)("inlineCode",{parentName:"p"},".x")," files and the code for\neach language is generated."),(0,o.kt)("p",null,"We currently support code generation for 3 languages: javascript, rust and go.\nThe generated code has the following dependencies:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"go: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/stellar/go-xdr"},"go-xdr")),(0,o.kt)("li",{parentName:"ul"},"rust: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/kochavalabs/xdr-rs-serialize"},"xdr-rs-serialize")),(0,o.kt)("li",{parentName:"ul"},"javascript: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/kochavalabs/xdr-js-serialize"},"xdr-js-serialize"))),(0,o.kt)("p",null,"The generated code is created with the help of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kochavalabs/xdr-codegen"},"xdr-codegen"),"\nand should not be modified manually."),(0,o.kt)("h2",{id:"generating-code"},"Generating Code"),(0,o.kt)("p",null,"If any changes are made to the idl files the code can generated by running the\nnpm build script after updating the xdr-codegen."),(0,o.kt)("p",null,"First clone or update xdr-codegen"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"git clone git@github.com:kochavalabs/xdr-codegen.git\ncd xdr-codegen\ngit pull\n")),(0,o.kt)("p",null,"Then run the npm build script to generate the code for all languages:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"npm install\nnpm run build\n")),(0,o.kt)("h2",{id:"license"},"License"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://choosealicense.com/licenses/mit/"},"MIT")))}h.isMDXComponent=!0}}]);